type: output
files:
- name: tests/output.txt
  visible: false
  text: |
    429
  learner_created: false
- name: main.py
  visible: true
  placeholders:
  - offset: 0
    length: 32
    placeholder_text: '...  # TODO найти количество натуральных чисел кратных 23'
    initial_state:
      length: 57
      offset: 0
    initialized_from_dependency: false
    selected: true
    status: Failed
    encrypted_possible_answer: |-
      start = 138  # первое натуральное число которое кратно 23
      end = 10000  # не превышающих 9999, значит 9999 включительно
      step = 23

      print(len(list(range(start, end, step))))
  text: |
    ...  # TODO найти количество натуральных чисел кратных 23
  learner_created: false
- name: __init__.py
  visible: false
  learner_created: false
status: Failed
feedback:
  message: Incorrect
  time: Tue, 15 Mar 2022 18:19:31 UTC
  expected: |
    429
  actual: |
    [123, 146, 169, 192, 215, 238, 261, 284, 307, 330, 353, 376, 399, 422, 445, 468, 491, 514, 537, 560, 583, 606, 629, 652, 675, 698, 721, 744, 767, 790, 813, 836, 859, 882, 905, 928, 951, 974, 997, 1020, 1043, 1066, 1089, 1112, 1135, 1158, 1181, 1204, 1227, 1250, 1273, 1296, 1319, 1342, 1365, 1388, 1411, 1434, 1457, 1480, 1503, 1526, 1549, 1572, 1595, 1618, 1641, 1664, 1687, 1710, 1733, 1756, 1779, 1802, 1825, 1848, 1871, 1894, 1917, 1940, 1963, 1986, 2009, 2032, 2055, 2078, 2101, 2124, 2147, 2170, 2193, 2216, 2239, 2262, 2285, 2308, 2331, 2354, 2377, 2400, 2423, 2446, 2469, 2492, 2515, 2538, 2561, 2584, 2607, 2630, 2653, 2676, 2699, 2722, 2745, 2768, 2791, 2814, 2837, 2860, 2883, 2906, 2929, 2952, 2975, 2998, 3021, 3044, 3067, 3090, 3113, 3136, 3159, 3182, 3205, 3228, 3251, 3274, 3297, 3320, 3343, 3366, 3389, 3412, 3435, 3458, 3481, 3504, 3527, 3550, 3573, 3596, 3619, 3642, 3665, 3688, 3711, 3734, 3757, 3780, 3803, 3826, 3849, 3872, 3895, 3918, 3941, 3964, 3987, 4010, 4033, 4056, 4079, 4102, 4125, 4148, 4171, 4194, 4217, 4240, 4263, 4286, 4309, 4332, 4355, 4378, 4401, 4424, 4447, 4470, 4493, 4516, 4539, 4562, 4585, 4608, 4631, 4654, 4677, 4700, 4723, 4746, 4769, 4792, 4815, 4838, 4861, 4884, 4907, 4930, 4953, 4976, 4999, 5022, 5045, 5068, 5091, 5114, 5137, 5160, 5183, 5206, 5229, 5252, 5275, 5298, 5321, 5344, 5367, 5390, 5413, 5436, 5459, 5482, 5505, 5528, 5551, 5574, 5597, 5620, 5643, 5666, 5689, 5712, 5735, 5758, 5781, 5804, 5827, 5850, 5873, 5896, 5919, 5942, 5965, 5988, 6011, 6034, 6057, 6080, 6103, 6126, 6149, 6172, 6195, 6218, 6241, 6264, 6287, 6310, 6333, 6356, 6379, 6402, 6425, 6448, 6471, 6494, 6517, 6540, 6563, 6586, 6609, 6632, 6655, 6678, 6701, 6724, 6747, 6770, 6793, 6816, 6839, 6862, 6885, 6908, 6931, 6954, 6977, 7000, 7023, 7046, 7069, 7092, 7115, 7138, 7161, 7184, 7207, 7230, 7253, 7276, 7299, 7322, 7345, 7368, 7391, 7414, 7437, 7460, 7483, 7506, 7529, 7552, 7575, 7598, 7621, 7644, 7667, 7690, 7713, 7736, 7759, 7782, 7805, 7828, 7851, 7874, 7897, 7920, 7943, 7966, 7989, 8012, 8035, 8058, 8081, 8104, 8127, 8150, 8173, 8196, 8219, 8242, 8265, 8288, 8311, 8334, 8357, 8380, 8403, 8426, 8449, 8472, 8495, 8518, 8541, 8564, 8587, 8610, 8633, 8656, 8679, 8702, 8725, 8748, 8771, 8794, 8817, 8840, 8863, 8886, 8909, 8932, 8955, 8978, 9001, 9024, 9047, 9070, 9093, 9116, 9139, 9162, 9185, 9208, 9231, 9254, 9277, 9300, 9323, 9346, 9369, 9392, 9415, 9438, 9461, 9484, 9507, 9530, 9553, 9576, 9599, 9622, 9645, 9668, 9691, 9714, 9737, 9760, 9783, 9806, 9829, 9852, 9875, 9898, 9921, 9944, 9967, 9990]
record: -1
